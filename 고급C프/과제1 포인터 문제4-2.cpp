#include <stdio.h>
int main() {
	//배열 선언
	int a[11], b[11];

	//n과 m선언하고 0으로 초기화
	int n = 0, m = 0;

	//포인터 선연
	int* p = a, * q = b;
	while (1) {
		//입력받을 변수 선언
		int a;
		scanf("%d", &a);
		//그 변수가 -1이면 입력을 그만 받고 반복문 탈출
		*p = a;
		if (a == -1)
			break;
		//-1이 아니면 배열에 입력받은 변수 저장
		p++;
		//n값을 1 증가시킴.
		n++;
	}
	while (1) {
		//이번엔 배열 b에다가 입력받음
		int a;
		scanf("%d", &a);
		*q = a;
		if (a == -1)
			break;
		q++;
		//m값 1증가
		m++;
	}
	//n은 배열 a의 길이, m은 배열 b의 길이가 되었다.
	//배열 a를 내림차순으로 정렬해준다.
	for (p = a; p < a + n; p++) {
		for (q = p; q < a + n; q++) {
			//내림차순 정렬하는 과정
			if (*p < *q) {
				int tmp = *p;
				*p = *q;
				*q = tmp;
			}
		}
	}
	//배열 b를 내림차순으로 정렬해준다.
	for (p = b; p < b + m; p++) {
		for (q = p; q < b + m; q++) {
			//내림차순 정렬하는 과정
			if (*p < *q) {
				int tmp = *p;
				*p = *q;
				*q = tmp;
			}
		}
	}
	//포인터 변수 p와 q가 각각 a의 첫번째 원소, b의 두번째 원소를 가리키게함.
	p = a;
	q = b;

	//두 포인터 변수가 가리키는 값 중에서 더 큰값을 출력함.
	//이 과정을 n번 반복하면 가장 높은 n개의 값을 출력할 수 있다.
	for (int i = 0; i < n; i++) {
		//만약 p가 가리키는 값이 -1이라면 p는 a의 끝에 도달했다는 뜻이므로
		if (*p == -1) {
			//q가 가리키고 있는 값을 출력
			printf("%d ", *q);
			//q를 한칸 뒤로 이동시킨다.
			q++;
		}
		//만약 q가 가리키는 값이 -1이라면 q는 b의 끝에 도달했다는 뜻이므로
		else if (*q == -1) {
			//p가 가리키고 있는 값을 출력
			printf("%d ", *p);
			//p를 한칸 뒤로 이동시킴.
			p++;
		}
		//만약 둘 중에 p가 가리키고 있는 값이 더 크다면
		else if (*p > *q) {
			//p가 가리키고 있는 값 출력
			printf("%d ", *p);
			//p를 한칸 뒤로 이동시킴.
			p++;
		}
		//그 외의 경우(q가 더 큰 경우)
		else {
			//q가 가리키고 있는 값 출력
			printf("%d ", *q);
			//q 한칸 뒤로 이동시킴.
			q++;
		}
	}
	printf("\n");
	//큰 값을 출력했을 때와 같은 방법으로 내림차순 정렬된 배열의 가장 뒤쪽에서부터 출
	//역시 이 과정을 m번 반복하면 가장 낮은 m개의 값을 출력할 수 있다.
	//p와 q가 각각 배열 a와 배열 b의 가장 마지막 원소를 가리키게함.
	p = a + n - 1;
	q = b + m - 1;
	for (int i = 0; i < m; i++) {
		//p가 맨 처음에 도달했다면 
		if (*p == NULL) {
			//q를 출력함
			printf("%d ", *q);
			//q를 한 칸 앞으로 이동시킴.
			q--;
		}
		//q가 맨 처음에 도달했다면
		else if (*q == NULL) {
			//p를 출력함.
			printf("%d ", *p);
			//p를 한 칸 앞으로 이동시킴.
			p--;
		}
		//p와 q중 p가 더 작다면
		else if (*p < *q) {
			//p를 출력하고
			printf("%d ", *p);
			//p를 한 칸 앞으로 이동시킴.
			p--;
		}
		//그 외의 경우(q가 더 작은 경우)
		else {
			//q를 출력함
			printf("%d ", *q);
			//q를 한 칸 앞으로 이동시킴.
			q--;
		}
	}
}